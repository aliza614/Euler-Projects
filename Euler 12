/*
Highly divisible triangular number

Problem 12
The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

#include <iostream>
#include <vector>
#include <math.h>
using namespace std;

int main(){
//set up vector. 
	vector  <int> v;
	
//set up num of factors
	int numfact=0;
//for each number find triangle number
	for(int i=1;numfact<500;i++)
	{
		int trinum=0;
		numfact=0;
		
		for(int j=1;j<=i;j++)
		{
			trinum=trinum+j;
		}
		v.push_back(trinum);
		//cout<<" "+trinum;
		//	find factors for each triangle number
		for(int k=1;k<sqrt(trinum);k++)
		{
			if(trinum%k==0) numfact++;
		}
	}
//cout vector.first [0]
	cout<< (int)v.back();
	return 0;
}
